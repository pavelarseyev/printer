export function main() {
    let print = $(".print");
    let remove = $(".remove");
    let field = $(".field");

    let time = 500 / 40;

    const vocabulary = {
        a: [[0, 1, 1, 0],
            [1, 1, 1, 1],
            [1, 1, 1, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 1, 1, 1],
            [1, 1, 1, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1]
        ],

        b: [
            [0, 1, 1, 0],
            [1, 1, 1, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 1, 1, 0],
            [1, 1, 1, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 1, 1, 0]
        ],

        c: [
            [1, 1, 1, 1],
            [1, 1, 1, 1],
            [1, 0, 0, 0],
            [1, 0, 0, 0],
            [1, 0, 0, 0],
            [1, 0, 0, 0],
            [1, 0, 0, 0],
            [1, 0, 0, 0],
            [1, 1, 1, 1],
            [1, 1, 1, 1]
        ],

        d: [
            [1, 1, 1, 0],
            [1, 1, 1, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 1, 1, 1],
            [1, 1, 1, 0]
        ],

        e: [
            [1, 1, 1, 1],
            [1, 1, 1, 1],
            [1, 0, 0, 0],
            [1, 0, 0, 0],
            [1, 1, 1, 0],
            [1, 1, 1, 0],
            [1, 0, 0, 0],
            [1, 0, 0, 0],
            [1, 1, 1, 1],
            [1, 1, 1, 1]
        ],

        f: [
            [1, 1, 1, 1],
            [1, 1, 1, 1],
            [1, 0, 0, 0],
            [1, 0, 0, 0],
            [1, 1, 1, 0],
            [1, 1, 1, 0],
            [1, 0, 0, 0],
            [1, 0, 0, 0],
            [1, 0, 0, 0],
            [1, 0, 0, 0]
        ],

        g: [
            [0, 1, 1, 1],
            [1, 1, 1, 1],
            [1, 0, 0, 0],
            [1, 0, 0, 0],
            [1, 0, 0, 0],
            [1, 0, 0, 0],
            [1, 0, 1, 1],
            [1, 0, 0, 1],
            [1, 1, 1, 1],
            [0, 1, 1, 1]
        ],

        h: [
            [1,0,0,1],
            [1,0,0,1],
            [1,0,0,1],
            [1,0,0,1],
            [1,1,1,1],
            [1,1,1,1],
            [1,0,0,1],
            [1,0,0,1],
            [1,0,0,1],
            [1,0,0,1],
        ],

        i: [
            [0, 0, 1, 0],
            [0, 1, 1, 0],
            [0, 0, 0, 0],
            [0, 0, 1, 0],
            [0, 1, 1, 0],
            [0, 1, 1, 0],
            [0, 1, 1, 0],
            [0, 1, 1, 0],
            [0, 1, 1, 0],
            [0, 1, 1, 0]
        ],

        j: [
            [1,1,1,1],
            [1,1,1,1],
            [0,0,0,1],
            [0,0,0,1],
            [0,0,0,1],
            [0,0,0,1],
            [0,0,0,1],
            [1,0,0,1],
            [1,1,1,1],
            [1,1,1,0],
        ],

        k: [
            [1,0,0,1],
            [1,0,0,1],
            [1,0,1,0],
            [1,0,1,0],
            [1,1,0,0],
            [1,1,1,0],
            [1,0,1,1],
            [1,0,0,1],
            [1,0,0,1],
            [1,0,0,1],
        ],

        l: [
            [1,1,0,0],
            [1,1,0,0],
            [1,1,0,0],
            [1,1,0,0],
            [1,1,0,0],
            [1,1,0,0],
            [1,1,0,0],
            [1,1,0,0],
            [1,1,1,1],
            [1,1,1,1],
        ],

        m: [
            [1,0,0,1],
            [1,0,0,1],
            [1,1,1,1],
            [1,0,0,1],
            [1,0,0,1],
            [1,0,0,1],
            [1,0,0,1],
            [1,0,0,1],
            [1,0,0,1],
            [1,0,0,1],
        ],

        n: [[1,0,0,1],
            [1,0,0,1],
            [1,1,0,1],
            [1,1,0,1],
            [1,1,0,1],
            [1,0,1,1],
            [1,0,1,1],
            [1,0,1,1],
            [1,0,0,1],
            [1,0,0,1],],

        o: [
            [1, 1, 1, 1],
            [1, 1, 1, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 1, 1, 1],
            [1, 1, 1, 1]
        ],
        p: [
            [1, 1, 1, 1],
            [1, 1, 1, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 1, 1, 0],
            [1, 1, 0, 0],
            [1, 1, 0, 0],
            [1, 1, 0, 0],
            [1, 1, 0, 0],
            [1, 1, 0, 0]
        ],
        q: [],
        r: [
            [1, 1, 1, 1],
            [1, 1, 1, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 1, 1, 0],
            [1, 1, 1, 0],
            [1, 0, 1, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1]
        ],
        s: [],
        t: [],
        u: [],
        v: [],
        w: [],
        x: [],
        y: [],
        z: [],

    };

    print.add("input").on("click keyup", function (e) {

        if ((e.type === "click" && e.target === print[0]) || (e.type === "keyup" && e.keyCode === 13)) {
            let val = $("input").val().toLowerCase().trim().split("");

            val.forEach((item, i) => {
                let arr = vocabulary[item] ? vocabulary[item] : [];

                setTimeout(function () {
                    createLetter();
                    fillLetter(arr);
                }, time * i);

            });
        }
    });

    remove.click(function () {
        let letters = field.find(".letter");

        letters.fadeOut(300, function () {
            letters.remove();
        });
    });


    function createLetter() {
        let letter = $(`<div class='letter'></div>`);

        for (let i = 0; i < 10; i++) {
            let html = "";
            let row = $(`<div class="row"></div>`);

            for (let i = 0; i < 4; i++) {
                html += `<div class="cell"></div>`;
            }

            row.html(html);

            $(letter).append(row);
        }

        field.append(letter);
    }

    function fillLetter(letterFromArr) {

        let flatArr = letterFromArr.flat();

        let cells = field.find(".letter:last-child .cell");

        cells.each(function (i, item) {
            let $this = $(item);

            setTimeout(function () {
                if (flatArr[i] === 1) {
                    $this.addClass("colored");
                }

            }, time * i);
        });
    }
}